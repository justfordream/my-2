<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<!-- 银行请求统一支付平台 -->
	<bean id="reqBankToCMU" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.reqBankToCMU}" />
	</bean>
	<!-- 统一支付平台应答银行 -->
	<bean id="resBankToCMU" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.resBankToCMU}" />
	</bean>

	<!-- 统一支付平台请求银行 -->
	<bean id="reqCMUToBank" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.reqCMUToBank}" />
	</bean>

	<!-- 银行应答统一支付平台 -->
	<bean id="resCMUToBank" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${jms.queue.resCMUToBank}" />
	</bean>
<!-- 
	<bean id="bankMessageListener" class="com.huateng.bank.listener.BankMessageListener">
		<property name="template" ref="jmsTemplate" />
		<property name="remoteService" ref="bankSecurityRemoting"></property>
		<property name="connTimeout" value="${http.conn.timeout}"/>
		<property name="revTimeout" value="${http.rev.timeout}"/>
	</bean>

	<bean id="bankListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="reqCMUToBank" />
		<property name="messageSelector" value="receiver='${jms.bankId}'" />
		<property name="messageListener" ref="bankMessageListener" />
		<property name="concurrentConsumers" value="10" />
		<property name="maxConcurrentConsumers" value="20" />
	</bean> -->
<!-- 	<bean id="bankService" class="com.huateng.bank.service.impl.BankServiceImpl"
		scope="prototype">
		<property name="destination" ref="reqBankToCMU" />
		<property name="respDest" ref="resBankToCMU" />
		<property name="template" ref="jmsTemplate" />
		<property name="sourceId" value="${source.id}" />
		<property name="logHandle" ref="logHandle" />
	</bean> -->
	
	
	<bean id="bankService" class="com.huateng.bank.service.impl.BankServiceImpl"
        scope="prototype">
        <property name="logHandle" ref="logHandle" />
        <property name="jmsSendUtil" ref="sendMessageUtils" />
        <property name="sourceId" value="${source.id}" />
    </bean>
        <bean id="destinationMap" class="java.util.HashMap">
        <constructor-arg>
             <map>
                <entry key="9999" value-ref="reqBankToCMU" />
            </map>
        </constructor-arg>
    </bean>
    <bean id="respDestMap" class="java.util.HashMap">
        <constructor-arg>
             <map>
                <entry key="9999" value-ref="resBankToCMU" />
            </map>
        </constructor-arg>
    </bean>
    <bean id="sendMessageUtils"
        class="com.huateng.core.common.SendMessageUtil"  scope="prototype">
        <property name="template" ref="jmsTemplate" />
        <property name="destinationMap">
            <ref local="destinationMap" />
        </property>
        <property name="respDestMap">
            <ref local="respDestMap" />
        </property>
        <property name="jmsTemplate4async" ref="jmsTemplate4async" />
    </bean>


  


    <!-- 配置JMS连接工厂 -->
    <!-- 采用TCP长连接方式, 避免每次建立短连接需要的额外工作时间 -->
    <bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
       <!--  <property name="maxConnections" value="2" /> -->
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${jms.broker.url}" />
                <property name="useCompression" value="false" />
                <property name="useAsyncSend" value="true" />
                <property name="userName" value="${jms.username}" />
                <property name="copyMessageOnSend" value="false" />
                <property name="optimizeAcknowledge" value="true" />
                <property name="alwaysSessionAsync" value="true" />
            </bean>
        </property>
    </bean>
    <!-- 采用TCP长连接方式, 避免每次建立短连接需要的额外工作时间 用于发送响应的 -->
    <bean id="connectionFactory4reply" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="maxConnections" value="1" />
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${jms.broker.url}" />
                <property name="useCompression" value="false" />
                <property name="useAsyncSend" value="true" />
                <property name="userName" value="${jms.username}" />
                <property name="copyMessageOnSend" value="false" />
                <property name="optimizeAcknowledge" value="true" />
                <property name="alwaysSessionAsync" value="true" />
            </bean>
        </property>
    </bean>
    <!-- 采用TCP长连接方式, 用于异步发送消息 -->
    <bean id="connectionFactory4async" class="org.apache.activemq.pool.PooledConnectionFactory"
        destroy-method="stop">
        <property name="maxConnections" value="2" />
        <property name="connectionFactory">
            <bean class="org.apache.activemq.spring.ActiveMQConnectionFactory">
                <property name="brokerURL" value="${jms.broker.url}" />
                <property name="useCompression" value="false" />
                <property name="useAsyncSend" value="true" />
                <property name="userName" value="${jms.username}" />
                <property name="copyMessageOnSend" value="false" />
                <property name="optimizeAcknowledge" value="true" />
                <property name="alwaysSessionAsync" value="true" />
            </bean>
        </property>
    </bean>


    <!-- 配置JMS模版 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="receiveTimeout" value="${jms.revieve.timeout}" />
        <property name="deliveryMode" value="2" />
        <property name="explicitQosEnabled" value="true" />
        <property name="timeToLive" value="${jms.time.tolive}" />
    </bean>
    <bean id="jmsTemplate4async" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory4async" />
        <property name="receiveTimeout" value="${jms.revieve.timeout}" />
        <property name="deliveryMode" value="1" />
        <property name="explicitQosEnabled" value="true" />
        <property name="timeToLive" value="${jms.async.tolive}" />
    </bean>
    
    

    <!-- 监听器 -->
    <bean id="clientListenerContainer"
        class="com.huateng.bank.listener.JifenReplyMsgListenerContainer">
        <property name="concurrentConsumers" value="5" />
        <property name="maxConcurrentConsumers" value="50" />
        <property name="connectionFactory" ref="connectionFactory4reply" />
        <property name="destination" ref="resBankToCMU" />
        <property name="messageListener" ref="txnListener" />
    </bean>

    <bean id="txnListener"
        class="com.huateng.bank.listener.JmsClientRecvListener">
        <property name="clientrecv" ref="sendMessageUtils" />
    </bean>
	
	
	
</beans>
